@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Danh sách lớp học";

}

@model IEnumerable<Class>

<div class="container-fluid mt-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Dashboard")" class="text-decoration-none">
                    <i class="bi bi-house-door"></i> Back to Dashborad
                </a>
            </li>

        </ol>
    </nav>

    <div class="card">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="card-title">Danh sách lớp học</h2>
                @* Người dùng có claim  CanManageClasses thì mới hiển thị button Thêm lớp học*@
                @if ((await AuthorizationService.AuthorizeAsync(User, "CanManageClasses")).Succeeded)
                {
                    <a href="@Url.Action("Add", "Class")" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-2"></i>Thêm lớp học
                    </a>
                }
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-search"></i></span>
                        <input type="text" class="form-control" id="searchInput" placeholder="Tìm kiếm lớp học...">
                    </div>
                </div>
            </div>

            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>Mã</th>
                            <th>Tên lớp học</th>
                            <th>Môn học</th>
                            <th>Phòng học</th>
                            <th>Lịch học</th>
                            <th>Sức chứa</th>
                            <th>Ngày bắt đầu</th>
                            <th>Ngày kết thúc</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Id</td>
                                <td>@item.Name</td>
                                <td>@item.Course.Name</td>
                                <td>@item.RoomNumber</td>
                                <td>
                                    @foreach (var classSchedule in item.ClassSchedules)
                                    {
                                        var dayName = classSchedule.Day switch
                                        {
                                            DayOfWeek.Sunday => "Chủ nhật",
                                            DayOfWeek.Monday => "Thứ hai",
                                            DayOfWeek.Tuesday => "Thứ ba",
                                            DayOfWeek.Wednesday => "Thứ tư",
                                            DayOfWeek.Thursday => "Thứ năm",
                                            DayOfWeek.Friday => "Thứ sáu",
                                            DayOfWeek.Saturday => "Thứ bảy",
                                            _ => classSchedule.Day.ToString()
                                        };
                                        @($"{dayName} {classSchedule.StartTime:HH:mm}-{classSchedule.EndTime:HH:mm}") <br />
                                    }
                                </td>
                                <td>@item.Capacity</td>
                                <td>@item.StartDate.ToString("dd/MM/yyyy")</td>
                                <td>@item.EndDate.ToString("dd/MM/yyyy")</td>
                                <td>
                                    @* Người dùng có policy CanManageClasses thì mới hiển thị nút Sửa / Xoá lớp học *@
                                    @if (User != null && (await AuthorizationService.AuthorizeAsync(User, "CanManageClasses")).Succeeded)
                                    {
                                        <a class="btn btn-sm btn-outline-primary me-2"
                                            href="@Url.Action("Edit", "Class", new { id = item.Id })">
                                            <i class="bi bi-pencil"></i> Sửa
                                        </a>
                                        <form method="post" action="@Url.Action("Delete", "Class")" style="display:inline;">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="Id" value="@item.Id" />
                                            <button type="submit" class="btn btn-sm btn-outline-danger">
                                                <i class="bi bi-trash"></i> Xóa
                                            </button>
                                        </form>
                                    }
                                    @if (User != null &&  (await AuthorizationService.AuthorizeAsync(User, "IsLecturer")).Succeeded)
                                    {
                                        <a class="btn btn-sm btn-outline-success"
                                            href="@Url.Action("Register", "Class", new { id = item.Id })">
                                            <i class="bi bi-person-check"></i> Đăng ký dạy
                                        </a>
                                    }
                                    @if (User != null && (await AuthorizationService.AuthorizeAsync(User, "IsStudent")).Succeeded)
                                    {
                                        <a class="btn btn-sm btn-outline-info"
                                            href="@Url.Action("Enroll", "Class", new { id = item.Id })">
                                            <i class="bi bi-journal-check"></i> Đăng ký học
                                        </a>
                                    }
                                    else if (User?.Identity?.IsAuthenticated != true)
                                    {
                                        <a class="btn btn-sm btn-outline-info" asp-area="Identity" asp-page="/Account/Register">
                                            <i class="bi bi-journal-check"></i> Đăng ký học
                                        </a>
                                    }

                                </td>
                            </tr>
                        }
                    </tbody>

                </table>
            </div>
        </div>
    </div>
</div>